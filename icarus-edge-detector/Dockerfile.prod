ARG BASE_IMAGE

FROM --platform=linux/arm64/v8 ${BASE_IMAGE} as builder

# Set environment variables
ENV HOME=/home/docker_user

# Install pip dependencies
COPY requirements.txt ${HOME}/requirements.txt
RUN pip3 wheel --no-cache-dir --no-deps --wheel-dir ${HOME}/wheels -r ${HOME}/requirements.txt

# Copy code
COPY scripts ${HOME}/scripts
COPY src ${HOME}/src


FROM ${BASE_IMAGE}

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV CUDA_HOME="/usr/local/cuda"
ENV PATH="/usr/local/cuda/bin:${PATH}"
ENV LD_LIBRARY_PATH="/usr/local/cuda/lib64:${LD_LIBRARY_PATH}"

ENV HOME=/home/docker_user

# Install PyCuda and Numba
RUN pip3 install --upgrade pip
RUN pip3 install --no-cache-dir --verbose pycuda
RUN pip3 install --no-cache-dir --verbose numba

# Create user
RUN useradd -m docker_user \
	&& usermod -a -G video docker_user

# Copy code from building stage
COPY --from=builder ${HOME}/wheels ${HOME}/wheels
COPY --from=builder ${HOME}/src ${HOME}/src
COPY --from=builder ${HOME}/scripts ${HOME}/scripts

# Set correct permissions
RUN chmod +x ${HOME}/scripts/*.sh

# Change permissions home folder
RUN chown -R docker_user ${HOME}

# Install pip dependencies
RUN pip3 install --no-cache ${HOME}/wheels/*

# Set /home/docker_user as work directory
WORKDIR ${HOME}

# Change root user to docker_user
USER docker_user